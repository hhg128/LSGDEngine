  HCorePCH.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.h(7): warning C5043: 'operator new': exception specification does not match previous declaration
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vcruntime_new.h(71): note: see declaration of 'operator new'
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.h(8): warning C5043: 'operator new[]': exception specification does not match previous declaration
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vcruntime_new.h(82): note: see declaration of 'operator new[]'
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hcstring.h(15): warning C4267: 'return': conversion from 'size_t' to 'uint32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_Container_proxy *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              OtherType=std::_Container_proxy
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(503): note: see reference to function template instantiation 'std::_Container_proxy *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              OtherType=std::_Container_proxy
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(510): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_Container_proxy
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(509): note: while compiling class template member function 'void std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Free_proxy(void)'
          with
          [
              _Ty=uint32,
              _Alloc=HStdAllocator<uint32>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(461): note: see reference to function template instantiation 'void std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Free_proxy(void)' being compiled
          with
          [
              _Ty=uint32,
              _Alloc=HStdAllocator<uint32>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=uint32,
              _Alloc=HStdAllocator<uint32>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hname.h(59): note: see reference to class template instantiation 'std::vector<uint32,HStdAllocator<uint32>>' being compiled
  Core.cpp
  HAssert.cpp
  HCriticalSection.cpp
  HEvent.cpp
  HFileArchive.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hfilearchive.cpp(87): warning C4267: 'initializing': conversion from 'size_t' to 'int32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<_Ty>> *HStdAllocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>::allocate(HStdAllocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>::size_type,const void *)'
          with
          [
              _Ty=lsgd::fileIO::HFileCacheChunk
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(956): note: see reference to function template instantiation 'std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<_Ty>> *HStdAllocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>::allocate(HStdAllocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>::size_type,const void *)' being compiled
          with
          [
              _Ty=lsgd::fileIO::HFileCacheChunk
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<_Ty>>>' being compiled
          with
          [
              _Ty=lsgd::fileIO::HFileCacheChunk
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<lsgd::fileIO::HFileCacheChunk>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<lsgd::fileIO::HFileCacheChunk>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<lsgd::fileIO::HFileCacheChunk>>,
              _Alloc=HStdAllocator<std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<lsgd::fileIO::HFileCacheChunk>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<lsgd::fileIO::HFileCacheChunk>>,
              _Alloc=HStdAllocator<std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<lsgd::fileIO::HFileCacheChunk>>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hfilearchive.h(51): note: see reference to class template instantiation 'std::vector<std::unique_ptr<lsgd::fileIO::HFileCacheChunk,std::default_delete<_Ty>>,HStdAllocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' being compiled
          with
          [
              _Ty=lsgd::fileIO::HFileCacheChunk
          ]
  HGarbageCollect.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HGCSweepExecutor.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HGeneratePrimitiveReflect.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hmakemethods.h(7): warning C4267: 'argument': conversion from 'size_t' to 'int32', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hstdoverrides.h(82): note: see reference to function template instantiation 'std::unique_ptr<lsgd::reflect::HPrimitiveType,std::default_delete<_Ty>> HMakeUnique<Type,const lsgd::HString&,lsgd::HGuid&,size_t&,int32&>(const lsgd::HString &,lsgd::HGuid &,size_t &,int32 &)' being compiled
          with
          [
              _Ty=lsgd::reflect::HPrimitiveType,
              Type=lsgd::reflect::HPrimitiveType
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(650): note: see reference to function template instantiation 'std::unique_ptr<lsgd::reflect::HPrimitiveType,std::default_delete<_Ty>> lsgd::make_unique<lsgd::reflect::HPrimitiveType,const lsgd::HString&,lsgd::HGuid,size_t,int32&>(const lsgd::HString &,lsgd::HGuid &&,size_t &&,int32 &)' being compiled
          with
          [
              _Ty=lsgd::reflect::HPrimitiveType
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hgenerateprimitivereflect.cpp(9): note: see reference to function template instantiation 'void lsgd::reflect::HTypeDatabase::AddPrimitiveType<int8>(const lsgd::HString &)' being compiled
  HGuid_crossguid.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\thirdparty\crossguid\guid.cpp(26): fatal error C1083: Cannot open include file: 'crossguid/guid.hpp': No such file or directory
  HLinker.cpp
  HLinkerLoad.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hstdoverrides.h(301): warning C4267: 'initializing': conversion from 'size_t' to 'uint32', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hlinkerload.cpp(44): note: see reference to function template instantiation 'lsgd::reflect::HReflectionContext &operator <<<lsgd::HObjectExport>(lsgd::reflect::HReflectionContext &,std::vector<lsgd::HObjectExport,HStdAllocator<lsgd::HObjectExport>> &)' being compiled
  HLinkerSave.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hlinkersave.cpp(113): warning C4267: 'initializing': conversion from 'size_t' to 'int32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hlinkersave.cpp(144): warning C4267: '=': conversion from 'size_t' to 'int32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hlinkersave.cpp(148): warning C4267: '=': conversion from 'size_t' to 'int32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hlinkersave.cpp(152): warning C4267: '=': conversion from 'size_t' to 'int32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hstdoverrides.h(301): warning C4267: 'initializing': conversion from 'size_t' to 'uint32', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hlinkersave.cpp(145): note: see reference to function template instantiation 'lsgd::reflect::HReflectionContext &operator <<<lsgd::HObjectExport>(lsgd::reflect::HReflectionContext &,std::vector<lsgd::HObjectExport,HStdAllocator<lsgd::HObjectExport>> &)' being compiled
  HMemoryArchive.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hmemoryarchive.cpp(32): warning C4267: 'initializing': conversion from 'size_t' to 'uint32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hmemoryarchive.cpp(35): warning C4244: '+=': conversion from 'int64' to 'uint32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'unsigned char *HStdAllocator<uint8>::allocate(HStdAllocator<uint8>::size_type,const void *)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1441): note: see reference to function template instantiation 'unsigned char *HStdAllocator<uint8>::allocate(HStdAllocator<uint8>::size_type,const void *)' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<uint8>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<uint8>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<uint8>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=uint8,
              _Alloc=HStdAllocator<uint8>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=uint8,
              _Alloc=HStdAllocator<uint8>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hmemoryarchive.cpp(32): note: see reference to class template instantiation 'std::vector<uint8,HStdAllocator<uint8>>' being compiled
  HName.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hname.cpp(91): warning C4267: '=': conversion from 'size_t' to 'int32', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'unsigned int *HStdAllocator<uint32>::allocate(HStdAllocator<uint32>::size_type,const void *)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(956): note: see reference to function template instantiation 'unsigned int *HStdAllocator<uint32>::allocate(HStdAllocator<uint32>::size_type,const void *)' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<uint32>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<uint32>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<uint32>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=uint32,
              _Alloc=HStdAllocator<uint32>
          ]
  HNewDeleteOverride.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.cpp(9): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.cpp(14): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.cpp(18): warning C5043: 'operator new': exception specification does not match previous declaration
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vcruntime_new.h(71): note: see declaration of 'operator new'
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.cpp(19): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.cpp(23): warning C5043: 'operator new[]': exception specification does not match previous declaration
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vcruntime_new.h(82): note: see declaration of 'operator new[]'
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hnewdeleteoverride.cpp(24): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  HObject.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HObjectArray.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'lsgd::HObjectArray::HObjectDeleteListener **HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>::allocate(HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>::size_type,const void *)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'lsgd::HObjectArray::HObjectDeleteListener **HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>::allocate(HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>::size_type,const void *)' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=lsgd::HObjectArray::HObjectDeleteListener *,
              _Alloc=HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=lsgd::HObjectArray::HObjectDeleteListener *,
              _Alloc=HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hobjectarray.h(106): note: see reference to class template instantiation 'std::vector<lsgd::HObjectArray::HObjectDeleteListener *,HStdAllocator<lsgd::HObjectArray::HObjectDeleteListener *>>' being compiled
  HObjectHandle.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HPackage.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HReferenceCollector.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  Generating Code...
  Compiling...
  HReflect.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'lsgd::reflect::HProperty **HStdAllocator<lsgd::reflect::HProperty *>::allocate(HStdAllocator<lsgd::reflect::HProperty *>::size_type,const void *)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'lsgd::reflect::HProperty **HStdAllocator<lsgd::reflect::HProperty *>::allocate(HStdAllocator<lsgd::reflect::HProperty *>::size_type,const void *)' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<lsgd::reflect::HProperty *>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<lsgd::reflect::HProperty *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<lsgd::reflect::HProperty *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=lsgd::reflect::HProperty *,
              _Alloc=HStdAllocator<lsgd::reflect::HProperty *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=lsgd::reflect::HProperty *,
              _Alloc=HStdAllocator<lsgd::reflect::HProperty *>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hreflect.cpp(75): note: see reference to class template instantiation 'std::vector<lsgd::reflect::HProperty *,HStdAllocator<lsgd::reflect::HProperty *>>' being compiled
  HReflectionContext.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HScopedEvent.cpp
  HStdOverrides.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hstdoverrides.cpp(62): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\string.h(132): note: see declaration of 'strcpy'
  HStringUtil.cpp
  HTaskGraph.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hconcurrentqueue.h(60): warning C4267: 'return': conversion from 'size_t' to 'uint32', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hconcurrentqueue.h(60): note: while compiling class template member function 'uint32 lsgd::container::HConcurrentQueue<Type>::Num(void)'
          with
          [
              Type=std::shared_ptr<lsgd::async::HBaseGraphTask>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hconcurrentqueue.h(109): note: see reference to function template instantiation 'uint32 lsgd::container::HConcurrentQueue<Type>::Num(void)' being compiled
          with
          [
              Type=std::shared_ptr<lsgd::async::HBaseGraphTask>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hconcurrentqueue.h(75): note: see reference to class template instantiation 'lsgd::container::HConcurrentQueue<Type>' being compiled
          with
          [
              Type=std::shared_ptr<lsgd::async::HBaseGraphTask>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htaskgraph.h(52): note: see reference to class template instantiation 'lsgd::container::HClosableConcurrentQueue<std::shared_ptr<_Ty>>' being compiled
          with
          [
              _Ty=lsgd::async::HBaseGraphTask
          ]
  HTaskThreadBase.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::shared_ptr<lsgd::thread::HThreadRunnable> *HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::allocate(HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::size_type,const void *)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(956): note: see reference to function template instantiation 'std::shared_ptr<lsgd::thread::HThreadRunnable> *HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::allocate(HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::size_type,const void *)' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::shared_ptr<lsgd::thread::HThreadRunnable>,
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::shared_ptr<lsgd::thread::HThreadRunnable>,
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htaskthreadbase.h(51): note: see reference to class template instantiation 'std::vector<std::shared_ptr<lsgd::thread::HThreadRunnable>,HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>>' being compiled
  HThreadManager.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::shared_ptr<lsgd::thread::HThreadRunnable> *HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::allocate(HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::size_type,const void *)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(956): note: see reference to function template instantiation 'std::shared_ptr<lsgd::thread::HThreadRunnable> *HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::allocate(HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>::size_type,const void *)' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::shared_ptr<lsgd::thread::HThreadRunnable>,
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::shared_ptr<lsgd::thread::HThreadRunnable>,
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hthreadmanager.h(33): note: see reference to class template instantiation 'std::vector<std::shared_ptr<lsgd::thread::HThreadRunnable>,HStdAllocator<std::shared_ptr<lsgd::thread::HThreadRunnable>>>' being compiled
  HThreadRunnable.cpp
  HTypeDatabase.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HTypeDatabaseUtils.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)'
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(1887): note: see reference to function template instantiation 'std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>> *HStdAllocator<OtherType>::allocate(HStdAllocator<OtherType>::size_type,const void *)' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<OtherType>' being compiled
          with
          [
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>,
              _Alloc=HStdAllocator<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xhash(1175): note: see reference to class template instantiation 'std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<_Ty,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,_Ty &,const _Ty &,std::_List_node<_Ty,void *> *>>>,HStdAllocator<OtherType>>' being compiled
          with
          [
              _Ty=std::pair<const lsgd::HString,int32>,
              OtherType=std::_List_unchecked_iterator<std::_List_val<std::_List_iter_types<std::pair<const lsgd::HString,int32>,unsigned __int64,int,std::pair<const lsgd::HString,int32> *,const std::pair<const lsgd::HString,int32> *,std::pair<const lsgd::HString,int32> &,const std::pair<const lsgd::HString,int32> &,std::_List_node<std::pair<const lsgd::HString,int32>,void *> *>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\unordered_map(97): note: see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=lsgd::HString,
              _Ty=int32,
              _Hasher=std::hash<std::string>,
              _Keyeq=std::equal_to<lsgd::HString>,
              _Alloc=HStdAllocator<std::pair<const lsgd::HString,int32>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htypedatabase.h(347): note: see reference to class template instantiation 'std::unordered_map<lsgd::HString,int32,std::hash<std::string>,std::equal_to<KeyType>,HStdAllocator<std::pair<const lsgd::HString,int32>>>' being compiled
          with
          [
              KeyType=lsgd::HString
          ]
  HTypeOverride.cpp
  HWindowsPlatformMisc.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hwindowsplatformmisc.cpp(50): warning C4244: 'argument': conversion from 'int64' to 'DWORD', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hwindowsplatformmisc.cpp(58): warning C4244: 'argument': conversion from 'int64' to 'DWORD', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hwindowsplatformmisc.cpp(113): warning C4244: 'argument': conversion from 'double' to 'unsigned long', possible loss of data
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\hwindowsplatformmisc.cpp(113): warning C4996: '_sleep': This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\stdlib.h(1282): note: see declaration of '_sleep'
  HTaskGraphInterface.cpp
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htaskgraph.h(117): warning C4267: 'initializing': conversion from 'size_t' to 'uint32', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htaskgraph.h(116): note: while compiling class template member function 'lsgd::async::HGraphTask<FTriggerEventGraphTasks>::HConstructor lsgd::async::HGraphTask<FTriggerEventGraphTasks>::CreateTask(std::vector<std::shared_ptr<lsgd::async::HGraphEvent>,HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>> &,bool,const lsgd::HString &)'
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htaskgraphinterface.cpp(51): note: see reference to function template instantiation 'lsgd::async::HGraphTask<FTriggerEventGraphTasks>::HConstructor lsgd::async::HGraphTask<FTriggerEventGraphTasks>::CreateTask(std::vector<std::shared_ptr<lsgd::async::HGraphEvent>,HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>> &,bool,const lsgd::HString &)' being compiled
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htaskgraphinterface.cpp(51): note: see reference to class template instantiation 'lsgd::async::HGraphTask<FTriggerEventGraphTasks>' being compiled
c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(28): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\memory\hallocator.h(27): note: while compiling class template member function 'std::shared_ptr<lsgd::async::HGraphEvent> *HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>::allocate(HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>::size_type,const void *)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(956): note: see reference to function template instantiation 'std::shared_ptr<lsgd::async::HGraphEvent> *HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>::allocate(HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>::size_type,const void *)' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(713): note: see reference to class template instantiation 'HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(905): note: see reference to class template instantiation 'std::_Normal_allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(360): note: see reference to class template instantiation 'std::allocator_traits<_Alloc>' being compiled
          with
          [
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(405): note: see reference to class template instantiation 'std::_Vec_base_types<_Ty,_Alloc>' being compiled
          with
          [
              _Ty=std::shared_ptr<lsgd::async::HGraphEvent>,
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\vector(626): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=std::shared_ptr<lsgd::async::HGraphEvent>,
              _Alloc=HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>
          ]
  c:\users\tkdgu\source\repos\tkdgur4427\lsgdengine\lsgdengine\core\htaskgraph.h(53): note: see reference to class template instantiation 'std::vector<std::shared_ptr<lsgd::async::HGraphEvent>,HStdAllocator<std::shared_ptr<lsgd::async::HGraphEvent>>>' being compiled
  Generating Code...
